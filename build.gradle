plugins {
    id "java"
    id "idea"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://jitpack.io/" }
}

version = "1.0.0"
group = "me.yuugiri.authlib"
archivesBaseName = "AuthLibPatcher"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += ["-Dfml.coreMods.load=me.yuugiri.authlib.bootstrap.fml.FMLBootstrap", "-Xmx1024m -Xms1024m"]
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    include fileTree(include: ["*.jar"], dir: "libs")
}

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.txt"

    exclude "com/sun/jna/**"

    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching("mcmod.info") {
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    rename "(.+_at.cfg)", "META-INF/\$1"
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn(processResources)
classes.dependsOn(moveResources)

jar {
    manifest.attributes(
            "FMLCorePlugin": "me.yuugiri.authlib.bootstrap.fml.FMLBootstrap",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "Agent-Class": "me.yuugiri.authlib.bootstrap.agent.AgentBootstrap",
            "Can-Retransform-Class": true,
    )

    enabled = false
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

tasks.reobfJar.dependsOn(shadowJar)
